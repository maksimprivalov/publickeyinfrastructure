import React, { useState, useEffect } from 'react';
import { Certificate } from '../models/certificate';
import certificatesApi from '../api/certificates/certificatesApi';
import caApi from '../api/certificates/caApi';

const CertificateUpload: React.FC = () => {
  const [selectedFile, setSelectedFile] = useState<File | null>(null);
  const [selectedCAId, setSelectedCAId] = useState<number | null>(null);
  const [availableCAs, setAvailableCAs] = useState<Certificate[]>([]);
  const [uploading, setUploading] = useState(false);
  const [error, setError] = useState<string | null>(null);
  const [success, setSuccess] = useState<string | null>(null);
  const [issuedCertificate, setIssuedCertificate] = useState<Certificate | null>(null);

  useEffect(() => {
    loadAvailableCAs();
  }, []);

  const loadAvailableCAs = async () => {
    try {
      const cas = await caApi.getAllCAs();
      // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –∞–∫—Ç–∏–≤–Ω—ã–µ –¶–ê
      const activeCAs = cas.filter(ca => ca.status === 'ACTIVE');
      setAvailableCAs(activeCAs);
      
      if (activeCAs.length > 0) {
        setSelectedCAId(activeCAs[0].id);
      }
    } catch (err) {
      setError('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å–ø–∏—Å–∫–∞ —Ü–µ–Ω—Ç—Ä–æ–≤ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏');
      console.error('Error loading CAs:', err);
    }
  };

  const handleFileSelect = (e: React.ChangeEvent<HTMLInputElement>) => {
    const file = e.target.files?.[0];
    if (file) {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
      if (!file.name.toLowerCase().endsWith('.csr') && !file.name.toLowerCase().endsWith('.pem')) {
        setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .csr –∏–ª–∏ .pem');
        return;
      }
      setSelectedFile(file);
      setError(null);
      setSuccess(null);
      setIssuedCertificate(null);
    }
  };

  const handleUpload = async () => {
    if (!selectedFile) {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª CSR –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏');
      return;
    }

    if (!selectedCAId) {
      setError('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–Ω—Ç—Ä —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏');
      return;
    }

    try {
      setUploading(true);
      setError(null);
      setSuccess(null);

      const certificate = await certificatesApi.uploadCSR(selectedCAId, selectedFile);
      
      setSuccess('CSR —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –≤—ã–ø—É—â–µ–Ω!');
      setIssuedCertificate(certificate);
      setSelectedFile(null);
      
      // –°–±—Ä–∞—Å—ã–≤–∞–µ–º input —Ñ–∞–π–ª–∞
      const fileInput = document.getElementById('csr-file-input') as HTMLInputElement;
      if (fileInput) {
        fileInput.value = '';
      }
    } catch (err) {
      setError(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ CSR: ${err instanceof Error ? err.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
      console.error('Error uploading CSR:', err);
    } finally {
      setUploading(false);
    }
  };

  const handleDownloadIssuedCertificate = async () => {
    if (!issuedCertificate) return;

    try {
      const blob = await certificatesApi.downloadCertificate(issuedCertificate.id);
      
      // –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
      const url = window.URL.createObjectURL(blob);
      const link = document.createElement('a');
      link.href = url;
      link.download = `certificate_${issuedCertificate.serialNumber}.p12`;
      document.body.appendChild(link);
      link.click();
      document.body.removeChild(link);
      window.URL.revokeObjectURL(url);
    } catch (err) {
      setError(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞: ${err instanceof Error ? err.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`);
    }
  };

  const formatDate = (dateString: string) => {
    return new Date(dateString).toLocaleDateString('ru-RU');
  };

  return (
    <div style={{ padding: 32 }}>
      <h1 style={{ marginBottom: 24 }}>–ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –ø–æ–¥–ø–∏—Å—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ (CSR)</h1>

      {error && (
        <div style={{
          backgroundColor: '#fee2e2',
          color: '#991b1b',
          padding: 16,
          borderRadius: 6,
          marginBottom: 24,
          border: '1px solid #fecaca'
        }}>
          {error}
        </div>
      )}

      {success && (
        <div style={{
          backgroundColor: '#d1fae5',
          color: '#065f46',
          padding: 16,
          borderRadius: 6,
          marginBottom: 24,
          border: '1px solid #a7f3d0'
        }}>
          {success}
        </div>
      )}

      <div style={{ 
        backgroundColor: 'white', 
        padding: 24, 
        borderRadius: 8, 
        boxShadow: '0 2px 8px #e0e7ff',
        marginBottom: 24 
      }}>
        <h3 style={{ marginTop: 0, marginBottom: 16 }}>–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª CSR –∏ —Ü–µ–Ω—Ç—Ä —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏</h3>

        <div style={{ marginBottom: 20 }}>
          <label style={{ display: 'block', marginBottom: 8, fontWeight: 'bold' }}>
            –¶–µ–Ω—Ç—Ä —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
          </label>
          {availableCAs.length === 0 ? (
            <div style={{ 
              padding: 12, 
              backgroundColor: '#fef3c7', 
              color: '#92400e', 
              borderRadius: 4,
              border: '1px solid #f59e0b'
            }}>
              –ê–∫—Ç–∏–≤–Ω—ã–µ —Ü–µ–Ω—Ç—Ä—ã —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –°–æ–∑–¥–∞–π—Ç–µ –¶–ê –ø–µ—Ä–µ–¥ –∑–∞–≥—Ä—É–∑–∫–æ–π CSR.
            </div>
          ) : (
            <select
              value={selectedCAId || ''}
              onChange={(e) => setSelectedCAId(parseInt(e.target.value))}
              style={{
                width: '100%',
                padding: 8,
                border: '1px solid #d1d5db',
                borderRadius: 4
              }}
            >
              {availableCAs.map((ca) => (
                <option key={ca.id} value={ca.id}>
                  {ca.subject} (S/N: {ca.serialNumber})
                </option>
              ))}
            </select>
          )}
        </div>

        <div style={{ marginBottom: 20 }}>
          <label style={{ display: 'block', marginBottom: 8, fontWeight: 'bold' }}>
            –§–∞–π–ª CSR (.csr, .pem)
          </label>
          <input
            id="csr-file-input"
            type="file"
            accept=".csr,.pem"
            onChange={handleFileSelect}
            style={{
              width: '100%',
              padding: 8,
              border: '1px solid #d1d5db',
              borderRadius: 4
            }}
          />
          {selectedFile && (
            <div style={{ 
              marginTop: 8, 
              padding: 8, 
              backgroundColor: '#f3f4f6', 
              borderRadius: 4,
              fontSize: 14 
            }}>
              <strong>–í—ã–±—Ä–∞–Ω–Ω—ã–π —Ñ–∞–π–ª:</strong> {selectedFile.name} ({Math.round(selectedFile.size / 1024)} KB)
            </div>
          )}
        </div>

        <button
          onClick={handleUpload}
          disabled={uploading || !selectedFile || availableCAs.length === 0}
          style={{
            padding: '12px 24px',
            backgroundColor: (uploading || !selectedFile || availableCAs.length === 0) ? '#9ca3af' : '#10b981',
            color: 'white',
            border: 'none',
            borderRadius: '6px',
            cursor: (uploading || !selectedFile || availableCAs.length === 0) ? 'not-allowed' : 'pointer',
            fontSize: 16,
            fontWeight: 'bold'
          }}
        >
          {uploading ? '–ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...' : '–ó–∞–≥—Ä—É–∑–∏—Ç—å CSR'}
        </button>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–ø—É—â–µ–Ω–Ω–æ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ */}
      {issuedCertificate && (
        <div style={{ 
          backgroundColor: 'white', 
          padding: 24, 
          borderRadius: 8, 
          boxShadow: '0 2px 8px #e0e7ff'
        }}>
          <h3 style={{ marginTop: 0, marginBottom: 16, color: '#059669' }}>
            ‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —É—Å–ø–µ—à–Ω–æ –≤—ã–ø—É—â–µ–Ω
          </h3>
          
          <div style={{ 
            display: 'grid', 
            gridTemplateColumns: '1fr 1fr', 
            gap: 16,
            marginBottom: 20 
          }}>
            <div>
              <strong>–°–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä:</strong><br />
              <span style={{ fontFamily: 'monospace' }}>{issuedCertificate.serialNumber}</span>
            </div>
            <div>
              <strong>–¢–∏–ø:</strong><br />
              {issuedCertificate.type === 'END_ENTITY' ? '–ö–æ–Ω–µ—á–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç' : issuedCertificate.type}
            </div>
            <div>
              <strong>–°—É–±—ä–µ–∫—Ç:</strong><br />
              {issuedCertificate.subject}
            </div>
            <div>
              <strong>–°—Ç–∞—Ç—É—Å:</strong><br />
              <span style={{
                padding: '2px 6px',
                borderRadius: '4px',
                fontSize: '12px',
                fontWeight: 'bold',
                backgroundColor: '#dcfce7',
                color: '#166534'
              }}>
                –ê–∫—Ç–∏–≤–µ–Ω
              </span>
            </div>
            <div>
              <strong>–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω —Å:</strong><br />
              {formatDate(issuedCertificate.validFrom)}
            </div>
            <div>
              <strong>–î–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω –¥–æ:</strong><br />
              {formatDate(issuedCertificate.validTo)}
            </div>
          </div>

          <button
            onClick={handleDownloadIssuedCertificate}
            style={{
              padding: '8px 16px',
              backgroundColor: '#3b82f6',
              color: 'white',
              border: 'none',
              borderRadius: '6px',
              cursor: 'pointer'
            }}
          >
            üì• –°–∫–∞—á–∞—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç (PKCS#12)
          </button>
        </div>
      )}

      {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
      <div style={{ 
        backgroundColor: '#f9fafb', 
        padding: 20, 
        borderRadius: 8,
        marginTop: 24
      }}>
        <h4 style={{ marginTop: 0 }}>üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:</h4>
        <ul style={{ paddingLeft: 20, color: '#6b7280' }}>
          <li>–í—ã–±–µ—Ä–∏—Ç–µ –∞–∫—Ç–∏–≤–Ω—ã–π —Ü–µ–Ω—Ç—Ä —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏–∑ —Å–ø–∏—Å–∫–∞</li>
          <li>–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª CSR –≤ —Ñ–æ—Ä–º–∞—Ç–µ .csr –∏–ª–∏ .pem</li>
          <li>–ù–∞–∂–º–∏—Ç–µ "–ó–∞–≥—Ä—É–∑–∏—Ç—å CSR" –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞</li>
          <li>–ü–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—ã–ø—É—Å–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –≤—ã —Å–º–æ–∂–µ—Ç–µ –µ–≥–æ —Å–∫–∞—á–∞—Ç—å</li>
          <li>–°–∫–∞—á–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –±—É–¥–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ PKCS#12 (.p12) —Å –ø–∞—Ä–æ–ª–µ–º "changeit"</li>
        </ul>
      </div>
    </div>
  );
};

export default CertificateUpload;
